#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *right_child;
    struct node *left_child;
};

struct node* arama(struct node *root, int x)
{
    if(root==NULL || root->data==x)
        return root;
    else if(x>root->data)
        return arama(root->right_child, x);
    else
        return arama(root->left_child,x);
}

struct node* minimum_bul(struct node *root)
{
    if(root == NULL)
        return NULL;
    else if(root->left_child != NULL)
        return minimum_bul(root->left_child);
    return root;
}

struct node* yeni_node(int x)
{
    struct node *p;
    p = malloc(sizeof(struct node));
    p->data = x;
    p->left_child = NULL;
    p->right_child = NULL;

    return p;
}

struct node* ekleme(struct node *root, int x)
{
    if(root==NULL)
        return yeni_node(x);
    else if(x>root->data)
        root->right_child = ekleme(root->right_child, x);
    else
        root->left_child = ekleme(root->left_child,x);
    return root;
}

struct node* silme(struct node *root, int x)
{
    if(root==NULL)
        return NULL;
    if (x>root->data)
        root->right_child = silme(root->right_child, x);
    else if(x<root->data)
        root->left_child = silme(root->left_child, x);
    else
    {
        if(root->left_child==NULL && root->right_child==NULL)
        {
            free(root);
            return NULL;
        }

        else if(root->left_child==NULL || root->right_child==NULL)
        {
            struct node *temp;
            if(root->left_child==NULL)
                temp = root->right_child;
            else
                temp = root->left_child;
            free(root);
            return temp;
        }

        else
        {
            struct node *temp = minimum_bul(root->right_child);
            root->data = temp->data;
            root->right_child = silme(root->right_child, temp->data);
        }
    }
    return root;
}

void inorder(struct node *root)
{
    if(root!=NULL)
    {
        inorder(root->left_child);
        printf(" %d ", root->data);
        inorder(root->right_child);
    }
}

int main()
{

    struct node *root;
    root = yeni_node(15);
    ekleme(root,34);
    ekleme(root,22);
    ekleme(root,20);
    ekleme(root,19);
    ekleme(root,4);
    ekleme(root,1);

    inorder(root);
    printf("\n");

    root = silme(root, 22);


    root = silme(root, 34);


    root = silme(root, 20);


    inorder(root);

    printf("\n");

    return 0;
}
